# -*- coding: utf-8 -*-
"""minitask_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V7RyXhV8DMOmLWnxOF6UDAST5Vbi_ucM
"""

import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.ticker import PercentFormatter

# Load the dataset
# Make sure the file 'Initial Public Offering.csv' is in the same directory as the script
try:
    df = pd.read_csv('Initial Public Offering.csv', encoding='utf-8')
except UnicodeDecodeError:
    df = pd.read_csv('Initial Public Offering.csv', encoding='latin1')


# Data Cleaning
# Drop unnamed columns
df = df.loc[:, ~df.columns.str.contains('^Unnamed')]
# Convert 'Date' to datetime
df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
# Convert numerical columns to numeric, coercing errors
# First, remove commas from the numbers
for col in ['Issue_Size(crores)', 'QIB', 'HNI', 'RII', 'Total', 'Offer Price', 'List Price', 'Listing Gain', 'CMP(BSE)', 'CMP(NSE)', 'Current Gains']:
    if col in df.columns and df[col].dtype == 'object':
        df[col] = df[col].astype(str).str.replace(',', '', regex=False)
    if col in df.columns:
        df[col] = pd.to_numeric(df[col], errors='coerce')

# Drop rows with missing values in key columns
df.dropna(subset=['Issue_Size(crores)', 'Listing Gain', 'Date', 'QIB', 'HNI', 'RII'], inplace=True)

# Visualization 1: Bar Chart of Top 10 IPOs by Issue Size
top_10_ipos = df.nlargest(10, 'Issue_Size(crores)')
plt.figure(figsize=(12, 6))
plt.barh(top_10_ipos['IPO_Name'], top_10_ipos['Issue_Size(crores)'], color='skyblue')
plt.xlabel('Issue Size (crores)')
plt.ylabel('IPO Name')
plt.title('Top 10 IPOs by Issue Size')
plt.gca().invert_yaxis()
plt.tight_layout()
plt.savefig('top_10_ipos_by_issue_size.png')

# Visualization 2: Line Chart of Average Listing Gain per Year
df['Year'] = df['Date'].dt.year
average_listing_gain_per_year = df.groupby('Year')['Listing Gain'].mean()
plt.figure(figsize=(12, 6))
plt.plot(average_listing_gain_per_year.index, average_listing_gain_per_year.values, marker='o', linestyle='-')
plt.xlabel('Year')
plt.ylabel('Average Listing Gain (%)')
plt.title('Average Listing Gain of IPOs Over the Years')
plt.grid(True)
plt.tight_layout()
plt.savefig('average_listing_gain_over_years.png')

# Visualization 3: Pie Chart of Investor Category Subscription
total_qib = df['QIB'].sum()
total_hni = df['HNI'].sum()
total_rii = df['RII'].sum()
investor_categories = ['QIB', 'HNI', 'RII']
subscription_data = [total_qib, total_hni, total_rii]
plt.figure(figsize=(8, 8))
plt.pie(subscription_data, labels=investor_categories, autopct='%1.1f%%', startangle=140, colors=['#ff9999','#66b3ff','#99ff99'])
plt.title('Total Subscription by Investor Category')
plt.axis('equal')
plt.savefig('investor_category_subscription.png')

# Visualization 4: Scatter Plot of Issue Size vs. Listing Gain
plt.figure(figsize=(10, 6))
plt.scatter(df['Issue_Size(crores)'], df['Listing Gain'], alpha=0.5)
plt.title('IPO Issue Size vs. Listing Gain')
plt.xlabel('Issue Size (crores)')
plt.ylabel('Listing Gain (%)')
plt.grid(True)
plt.savefig('issue_size_vs_listing_gain.png')

# Visualization 5: Pareto Chart of IPO Issue Sizes (Top 20)
top_20_pareto = df.nlargest(20, 'Issue_Size(crores)').sort_values(by='Issue_Size(crores)', ascending=False)
top_20_pareto['Cumulative Percentage'] = top_20_pareto['Issue_Size(crores)'].cumsum() / top_20_pareto['Issue_Size(crores)'].sum() * 100

fig, ax = plt.subplots(figsize=(12,6))
ax.bar(top_20_pareto['IPO_Name'], top_20_pareto['Issue_Size(crores)'], color='skyblue')
ax.set_xticklabels(ax.get_xticklabels(), rotation=90)
ax.set_ylabel('Issue Size (crores)')

ax2 = ax.twinx()
ax2.plot(top_20_pareto['IPO_Name'], top_20_pareto['Cumulative Percentage'], color='red', marker='o', ms=5)
ax2.yaxis.set_major_formatter(PercentFormatter())
ax2.set_ylabel('Cumulative Percentage')

plt.title('Pareto Chart of Top 20 IPO Issue Sizes')
plt.tight_layout()
plt.savefig('ipo_pareto_chart.png')

print("Charts saved as image files in your current directory.")
